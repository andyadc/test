<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bill99.ayf.auth.persistence.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.bill99.ayf.auth.persistence.entity.Role">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="deleted" jdbcType="INTEGER" property="deleted"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, `name`, code, `status`, deleted, remarks, create_time, update_time, version
  </sql>

    <!-- -->
    <select id="selectList" resultMap="BaseResultMap">
        select id, `name`, code, `status`, deleted, remarks, create_time, update_time
        from t_ayf_user_role 
        where deleted = 0
    </select>
    
    <delete id="deleteUserRoles">
        DELETE FROM `t_ayf_user_role` WHERE user_id = #{userId}
    </delete>

    <insert id="batchSaveUserRoles">
        insert into t_ayf_user_role (user_id, role_id)
        values
        <foreach collection="list" item="ur" separator=",">
            (#{ur.userId}, #{ur.roleId})
        </foreach>
    </insert>

    <delete id="deleteRolePermissions">
        DELETE FROM `t_ayf_role_permission` WHERE role_id = #{roleId}
    </delete>

    <insert id="batchSaveRolePermissions">
        insert into t_ayf_role_permission (role_id, permission_id)
        values
        <foreach collection="list" item="rp" separator=",">
            (#{rp.roleId}, #{rp.permissionId})
        </foreach>
    </insert>
    
    <select id="checkRoleUsed" resultType="java.lang.Integer">
        select count(1) from t_ayf_user_role where role_id = #{roleId}
    </select>

    <select id="checkPermissionUsed" resultType="java.lang.Integer">
        select count(1) from t_ayf_role_permission where permission_id = #{permissionId}
    </select>
    <!-- -->

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_ayf_role
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_ayf_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.bill99.ayf.auth.persistence.entity.Role">
    insert into t_ayf_role (id, `name`, code, 
      `status`, deleted, remarks, 
      create_time, update_time, version
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{deleted,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.bill99.ayf.auth.persistence.entity.Role">
        insert into t_ayf_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="version != null">
                version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=INTEGER},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bill99.ayf.auth.persistence.entity.Role">
        update t_ayf_role
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=INTEGER},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bill99.ayf.auth.persistence.entity.Role">
    update t_ayf_role
    set `name` = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>